{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\admin\\\\Desktop\\\\project\\\\my-app\\\\src\\\\App.js\",\n  _s = $RefreshSig$();\nimport \"./App.css\";\nimport ContentContainer from \"./components/ContentContainer\";\nimport CardComponent from \"./components/CardComponent\";\nimport GuessComponent from \"./components/GuessComponent\";\nimport { useEffect, useState } from \"react\";\nimport axios from \"axios\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction App() {\n  _s();\n  const img_file = [\"cat1\", \"cat2\"];\n  const [geolocation, setGeo] = useState(\"\");\n  useEffect(() => {\n    const fetchIp = async () => {\n      try {\n        const res = await axios.get(\"http://127.0.0.1:5000/api/get_ip\");\n        const continent_api = await axios.get(`https://restcountries.com/v3.1/alpha/${res.data.country}`);\n        const geo = res.data;\n        geo[\"continent\"] = continent_api.data[0].subregion;\n        geo[\"country\"] = continent_api.data[0].name.common;\n        setGeo(geo);\n      } catch (error) {\n        console.log(\"Error fetching ip address: \", error);\n      }\n    };\n    fetchIp();\n  }, []);\n  console.log(geolocation);\n  const continent = geolocation.continent;\n  const country = geolocation.country;\n  const region = geolocation.region;\n  const city = geolocation.city;\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"App\",\n    children: /*#__PURE__*/_jsxDEV(ContentContainer, {\n      children: /*#__PURE__*/_jsxDEV(GuessComponent, {\n        geo_guess: \"test\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 38,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 37,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 36,\n    columnNumber: 5\n  }, this);\n}\n_s(App, \"8AjCtKBL5XTTuHltlHMPCldXzdo=\");\n_c = App;\nexport default App;\nvar _c;\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["ContentContainer","CardComponent","GuessComponent","useEffect","useState","axios","jsxDEV","_jsxDEV","App","_s","img_file","geolocation","setGeo","fetchIp","res","get","continent_api","data","country","geo","subregion","name","common","error","console","log","continent","region","city","className","children","geo_guess","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["C:/Users/admin/Desktop/project/my-app/src/App.js"],"sourcesContent":["import \"./App.css\";\nimport ContentContainer from \"./components/ContentContainer\";\nimport CardComponent from \"./components/CardComponent\";\nimport GuessComponent from \"./components/GuessComponent\";\nimport { useEffect, useState } from \"react\";\nimport axios from \"axios\";\n\nfunction App() {\n  const img_file = [\"cat1\", \"cat2\"];\n  const [geolocation, setGeo] = useState(\"\");\n\n  useEffect(() => {\n    const fetchIp = async () => {\n      try {\n        const res = await axios.get(\"http://127.0.0.1:5000/api/get_ip\");\n        const continent_api = await axios.get(\n          `https://restcountries.com/v3.1/alpha/${res.data.country}`\n        );\n        const geo = res.data;\n        geo[\"continent\"] = continent_api.data[0].subregion;\n        geo[\"country\"] = continent_api.data[0].name.common;\n        setGeo(geo);\n      } catch (error) {\n        console.log(\"Error fetching ip address: \", error);\n      }\n    };\n    fetchIp();\n  }, []);\n  console.log(geolocation);\n  const continent = geolocation.continent;\n  const country = geolocation.country;\n  const region = geolocation.region;\n  const city = geolocation.city;\n\n  return (\n    <div className=\"App\">\n      <ContentContainer>\n        <GuessComponent geo_guess={\"test\"} />\n        {/* <CardComponent img_file={img_file[0]} />\n        <CardComponent img_file={img_file[1]} /> */}\n      </ContentContainer>\n    </div>\n  );\n}\n\nexport default App;\n"],"mappings":";;AAAA,OAAO,WAAW;AAClB,OAAOA,gBAAgB,MAAM,+BAA+B;AAC5D,OAAOC,aAAa,MAAM,4BAA4B;AACtD,OAAOC,cAAc,MAAM,6BAA6B;AACxD,SAASC,SAAS,EAAEC,QAAQ,QAAQ,OAAO;AAC3C,OAAOC,KAAK,MAAM,OAAO;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAE1B,SAASC,GAAGA,CAAA,EAAG;EAAAC,EAAA;EACb,MAAMC,QAAQ,GAAG,CAAC,MAAM,EAAE,MAAM,CAAC;EACjC,MAAM,CAACC,WAAW,EAAEC,MAAM,CAAC,GAAGR,QAAQ,CAAC,EAAE,CAAC;EAE1CD,SAAS,CAAC,MAAM;IACd,MAAMU,OAAO,GAAG,MAAAA,CAAA,KAAY;MAC1B,IAAI;QACF,MAAMC,GAAG,GAAG,MAAMT,KAAK,CAACU,GAAG,CAAC,kCAAkC,CAAC;QAC/D,MAAMC,aAAa,GAAG,MAAMX,KAAK,CAACU,GAAG,CAClC,wCAAuCD,GAAG,CAACG,IAAI,CAACC,OAAQ,EAC3D,CAAC;QACD,MAAMC,GAAG,GAAGL,GAAG,CAACG,IAAI;QACpBE,GAAG,CAAC,WAAW,CAAC,GAAGH,aAAa,CAACC,IAAI,CAAC,CAAC,CAAC,CAACG,SAAS;QAClDD,GAAG,CAAC,SAAS,CAAC,GAAGH,aAAa,CAACC,IAAI,CAAC,CAAC,CAAC,CAACI,IAAI,CAACC,MAAM;QAClDV,MAAM,CAACO,GAAG,CAAC;MACb,CAAC,CAAC,OAAOI,KAAK,EAAE;QACdC,OAAO,CAACC,GAAG,CAAC,6BAA6B,EAAEF,KAAK,CAAC;MACnD;IACF,CAAC;IACDV,OAAO,CAAC,CAAC;EACX,CAAC,EAAE,EAAE,CAAC;EACNW,OAAO,CAACC,GAAG,CAACd,WAAW,CAAC;EACxB,MAAMe,SAAS,GAAGf,WAAW,CAACe,SAAS;EACvC,MAAMR,OAAO,GAAGP,WAAW,CAACO,OAAO;EACnC,MAAMS,MAAM,GAAGhB,WAAW,CAACgB,MAAM;EACjC,MAAMC,IAAI,GAAGjB,WAAW,CAACiB,IAAI;EAE7B,oBACErB,OAAA;IAAKsB,SAAS,EAAC,KAAK;IAAAC,QAAA,eAClBvB,OAAA,CAACP,gBAAgB;MAAA8B,QAAA,eACfvB,OAAA,CAACL,cAAc;QAAC6B,SAAS,EAAE;MAAO;QAAAC,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAE;IAAC;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAGrB;EAAC;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OAChB,CAAC;AAEV;AAAC1B,EAAA,CApCQD,GAAG;AAAA4B,EAAA,GAAH5B,GAAG;AAsCZ,eAAeA,GAAG;AAAC,IAAA4B,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}