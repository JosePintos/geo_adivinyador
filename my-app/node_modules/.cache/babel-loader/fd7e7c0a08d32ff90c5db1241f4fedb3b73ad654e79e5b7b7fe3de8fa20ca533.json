{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\admin\\\\Desktop\\\\project\\\\my-app\\\\src\\\\App.js\",\n  _s = $RefreshSig$();\nimport \"./App.css\";\nimport ContentContainer from \"./components/ContentContainer\";\nimport CardComponent from \"./components/CardComponent\";\nimport GuessComponent from \"./components/GuessComponent\";\nimport { useEffect, useState } from \"react\";\nimport axios from \"axios\";\nimport { jsxDEV as _jsxDEV, Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nfunction App() {\n  _s();\n  const img_file = [\"cat1\", \"cat2\"];\n  const [geolocation, setGeo] = useState([]);\n  const [isCorrect, setIsCorrect] = useState(true);\n  const [isPicked, setIsPicked] = useState(false);\n  useEffect(() => {\n    const fetchIp = async () => {\n      try {\n        const res = await axios.get(\"http://127.0.0.1:5000/api/get_ip\");\n        const continent_api = await axios.get(`https://restcountries.com/v3.1/alpha/${res.data.country}`);\n        const geo = res.data;\n        geo[\"continent\"] = continent_api.data[0].subregion;\n        geo[\"country\"] = continent_api.data[0].name.common;\n        setGeo([geo.city, geo.region, geo.country, geo.continent]);\n      } catch (error) {\n        console.log(\"Error fetching ip address: \", error);\n      }\n    };\n    fetchIp();\n  }, []);\n  console.log(geolocation);\n\n  // const continent = geolocation.continent;\n  // const country = geolocation.country;\n  // const region = geolocation.region;\n  // const city = geolocation.city;\n  const continent = \"south america\";\n  const country = \"argentina\";\n  const region = \"cordoba\";\n  const city = \"cordoba\";\n  let geo_array = [city, region, country, continent];\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"App\",\n    children: /*#__PURE__*/_jsxDEV(ContentContainer, {\n      isPicked: isPicked,\n      children: !geo_array || !isCorrect ? /*#__PURE__*/_jsxDEV(\"h3\", {\n        children: \"Se hizo lo que se pudo \\uD83D\\uDE3F.\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 48,\n        columnNumber: 11\n      }, this) : !isPicked ? /*#__PURE__*/_jsxDEV(_Fragment, {\n        children: [/*#__PURE__*/_jsxDEV(CardComponent, {\n          img_file: img_file[0],\n          setIsPicked: setIsPicked\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 51,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(CardComponent, {\n          img_file: img_file[1],\n          setIsPicked: setIsPicked\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 52,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true) : /*#__PURE__*/_jsxDEV(GuessComponent, {\n        geo_guess: geolocation,\n        setGeo: setGeo,\n        setIsCorrect: setIsCorrect,\n        setIsPicked: setIsPicked\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 55,\n        columnNumber: 11\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 46,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 45,\n    columnNumber: 5\n  }, this);\n}\n_s(App, \"3dfWB+BnjcvP1W3Bg0/CCJmaFqw=\");\n_c = App;\nexport default App;\nvar _c;\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["ContentContainer","CardComponent","GuessComponent","useEffect","useState","axios","jsxDEV","_jsxDEV","Fragment","_Fragment","App","_s","img_file","geolocation","setGeo","isCorrect","setIsCorrect","isPicked","setIsPicked","fetchIp","res","get","continent_api","data","country","geo","subregion","name","common","city","region","continent","error","console","log","geo_array","className","children","fileName","_jsxFileName","lineNumber","columnNumber","geo_guess","_c","$RefreshReg$"],"sources":["C:/Users/admin/Desktop/project/my-app/src/App.js"],"sourcesContent":["import \"./App.css\";\nimport ContentContainer from \"./components/ContentContainer\";\nimport CardComponent from \"./components/CardComponent\";\nimport GuessComponent from \"./components/GuessComponent\";\nimport { useEffect, useState } from \"react\";\nimport axios from \"axios\";\n\nfunction App() {\n  const img_file = [\"cat1\", \"cat2\"];\n  const [geolocation, setGeo] = useState([]);\n  const [isCorrect, setIsCorrect] = useState(true);\n  const [isPicked, setIsPicked] = useState(false);\n\n  useEffect(() => {\n    const fetchIp = async () => {\n      try {\n        const res = await axios.get(\"http://127.0.0.1:5000/api/get_ip\");\n        const continent_api = await axios.get(\n          `https://restcountries.com/v3.1/alpha/${res.data.country}`\n        );\n        const geo = res.data;\n        geo[\"continent\"] = continent_api.data[0].subregion;\n        geo[\"country\"] = continent_api.data[0].name.common;\n        setGeo([geo.city, geo.region, geo.country, geo.continent]);\n      } catch (error) {\n        console.log(\"Error fetching ip address: \", error);\n      }\n    };\n    fetchIp();\n  }, []);\n  console.log(geolocation);\n\n  // const continent = geolocation.continent;\n  // const country = geolocation.country;\n  // const region = geolocation.region;\n  // const city = geolocation.city;\n  const continent = \"south america\";\n  const country = \"argentina\";\n  const region = \"cordoba\";\n  const city = \"cordoba\";\n\n  let geo_array = [city, region, country, continent];\n\n  return (\n    <div className=\"App\">\n      <ContentContainer isPicked={isPicked}>\n        {!geo_array || !isCorrect ? (\n          <h3>Se hizo lo que se pudo ðŸ˜¿.</h3>\n        ) : !isPicked ? (\n          <>\n            <CardComponent img_file={img_file[0]} setIsPicked={setIsPicked} />\n            <CardComponent img_file={img_file[1]} setIsPicked={setIsPicked} />\n          </>\n        ) : (\n          <GuessComponent\n            geo_guess={geolocation}\n            setGeo={setGeo}\n            setIsCorrect={setIsCorrect}\n            setIsPicked={setIsPicked}\n          />\n        )}\n      </ContentContainer>\n    </div>\n  );\n}\n\nexport default App;\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}